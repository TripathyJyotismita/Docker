# the new run command syntax...
docker container run hello-world

# the old command syntax...
docker run hello-world

# You can pre-seed the local docker cache with container images you plan to run by using the docker pull command.
# new syntax
docker image pull hello-world

# old syntax
docker pull hello-world

# Usage: docker container ls [OPTIONS]
docker container ls

# short form of the parameter is -a
docker container ls -a
# long form is --all
docker container ls --all

# old syntax
docker ps -a

# there is no short form of the --rm parameter
docker container run --rm hello-world

# The Remove Container command
# the new syntax
# Usage: docker container rm [OPTIONS] CONTAINER [CONTAINER...]
docker container rm cd828234194a

# the old syntax
docker rm cd828234194a

# Here is an example using the "--name" parameter:
docker container run --name hi-earl hello-world

# You can delete multiple containers at the same time by providing the unique identifier for each on the command line, like this:
docker container rm hi-earl hi-earl2

# An example using the force command to remove it:
docker container rm --force web-server

# Some times, you may want to remove all of the containers on your system, running or not. Here is the command:
# first list all container command
docker container ls --all --quiet
# Now we can feed the values returned by the container list command as input parameters to the container remove command. It will look like this:
# using full parameter names
docker container rm --force $(docker container ls --all --quiet)
# using short parameter names
docker container rm -f $(docker container ls -aq)

# using the old syntax
docker rm -f $(docker ps -aq)

# You can add something like the following to your ~/.bash_profile or ~/zshrc file...
alias RMAC='docker container rm --force $(docker container ls --all --quiet)'

# It is the "--detach" parameter.  Here is what using that parameter looks like:
# using the full form of the parameter
docker container run --detach --name web-server --rm nginx
# using the short form of the parameter
docker container run -d --name web-server --rm nginx
Using this parameter detaches the process from the foreground session and returns control to you as soon as the container has started. You next question is probably How do I stop a detached container.  Well I am glad you asked. You use the container stop command.

The Stop Container command
# Usage: docker container stop [OPTIONS] CONTAINER [CONTAINER...]
docker container stop web-server
